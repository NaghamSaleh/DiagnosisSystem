@{
    var yAxisList = ViewBag.YAxis as List<AnalyticsDTO>;
    var specialities = ViewBag.Specialties as List<Specialty>;
    var specName = specialities.Select(n => n.SpecialtyName).ToList();
    var count = yAxisList.Select(y => y.Count).ToList();

}
<canvas id="barChart" width="800" height="400"></canvas>

<head>
    <title>Doctors per Specialty</title>
    <link rel="stylesheet" type="text/css" href="/css/Doctor/Analyticss.css">

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <header class="header">
        <div class="brand">
            <a href="https://naghammzs02.wordpress.com/" style="text-decoration: none; color: inherit;">Qure</a>
        </div>

        <nav class="choices">
            <a asp-action="Queries" asp-controller="Doctor">User Queries</a>
            <a asp-action="Forum" asp-controller="Doctor">Doctors Forum</a>
            <a asp-action="Analytics" asp-controller="Doctor">Analytics</a>
            <a asp-action="MyAccount" asp-controller="Doctor">
                <img src="https://i.imgur.com/69kGIrt.png" alt="My Account" class="account-icon">
            </a>


        </nav>


    </header>


   

</body>

<script>


    var specName = @Html.Raw(Json.Serialize(specName));
    var count = @Html.Raw(Json.Serialize(count));

    var ctx = document.getElementById('barChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: specName,
            datasets: [{
                label: 'Doctors per Specialty',
                data: count,
                backgroundColor: 'rgba(153, 102, 255, 0.5)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 1
                    }
                }
            }
        }
    });



</script>
